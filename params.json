{"name":"vcgencmd","tagline":"Native Python binding for RaspberryPi vcgencmd command-line tool","body":"# vcgencmd - Native Python binding for RaspberryPi vcgencmd command-line tool\r\n\r\n## Summary\r\n\r\n'vcgencmd' is a command line tool designed by Broadcom used on the Raspberry Pi.\r\nThis Python package is a native binding to that tool. Currently only a portion\r\nof the 'vcgencmd' command line tool is supported.\r\n\r\n## Install\r\n\r\nvcgencmd is compatible with both Python2.7+ and Python3.x. The raspberry pi I\r\nhave has python 3.2 installed. These instructions will be for that. You can\r\nsubstitute the python and pip commands accordingly for other versions.\r\nThe installer requires the `setuptools` package.\r\n\r\n### Requirements\r\nPip (Python 3 version):\r\n```bash\r\nsudo apt-get install python3-pip\r\n```\r\nSetuptools (Python 3 version):\r\n```bash\r\nsudo pip-3.2 install setuptools\r\n```\r\n\r\n### Python package manager (PIP)\r\nInstall globally:\r\n```bash\r\nsudo pip-3.2 install git+https://github.com/nicmcd/vcgencmd.git\r\n```\r\nInstall locally:\r\n```bash\r\npip-3.2 install --user git+https://github.com/nicmcd/vcgencmd.git\r\n```\r\n\r\n### Source installation\r\nInstall globally:\r\n```bash\r\nsudo python3 setup.py install\r\n```\r\nInstall locally:\r\n```bash\r\npython3 setup.py install --user\r\n```\r\n\r\n## Uninstall\r\n```bash\r\nsudo pip-3.2 uninstall vcgencmd\r\n```\r\n\r\n## Test/Command-Line\r\n```bash\r\nnic@raspberrypi:/tmp$ python3 -m vcgencmd\r\nClock Frequencies (Hz):\r\n  arm       : 700000000\r\n  core      : 250000000\r\n  h264      : 250000000\r\n  isp       : 250000000\r\n  v3d       : 250000000\r\n  uart      : 3000000\r\n  pwm       : 0\r\n  emmc      : 250000000\r\n  pixel     : 25200000\r\n  vec       : 0\r\n  hdmi      : 163683000\r\n  dpi       : 0\r\nVoltages (V):\r\n  core      : 1.2\r\n  sdram_c   : 1.2\r\n  sdram_i   : 1.2\r\n  sdram_p   : 1.225\r\nTemperatures (C):\r\n            : 37.9\r\nCodecs Enabled:\r\n  h264      : False\r\n  mpg2      : False\r\n  wvc1      : False\r\n  mpg4      : False\r\n  mjpg      : False\r\n  wmv9      : False\r\nMemory Allocation (bytes):\r\n  arm       : 469762048\r\n  gpu       : 67108864\r\n```\r\n\r\n## Usage\r\n```bash\r\nnic@raspberrypi:/tmp$ python3\r\nPython 3.2.3 (default, Mar  1 2013, 11:53:50)\r\n[GCC 4.6.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import vcgencmd\r\n>>> vcgencmd.frequency_sources()\r\n['arm', 'core', 'h264', 'isp', 'v3d', 'uart', 'pwm', 'emmc', 'pixel', 'vec', 'hdmi', 'dpi']\r\n>>> vcgencmd.measure_clock('arm')\r\n700000000\r\n>>> vcgencmd.measure_clock('hdmi')\r\n163682000\r\n>>> vcgencmd.voltage_sources()\r\n['core', 'sdram_c', 'sdram_i', 'sdram_p']\r\n>>> vcgencmd.measure_volts('core')\r\n1.2\r\n>>> vcgencmd.measure_volts('sdram_p')\r\n1.225\r\n>>> vcgencmd.measure_temp()\r\n38.5\r\n>>> vcgencmd.codec_sources()\r\n['h264', 'mpg2', 'wvc1', 'mpg4', 'mjpg', 'wmv9']\r\n>>> vcgencmd.codec_enabled('mpg4')\r\nFalse\r\n>>> vcgencmd.memory_sources()\r\n['arm', 'gpu']\r\n>>> vcgencmd.get_mem('arm')\r\n469762048\r\n>>>\r\n``` \r\n","google":"UA-73117208-1","note":"Don't delete this file! It's used internally to help with page regeneration."}